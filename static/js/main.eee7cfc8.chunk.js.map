{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","services/contactsAPI.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","redux/contacts/contacts-actions.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContacts","a","axios","get","data","addContact","contact","post","deleteContact","contactId","delete","defaults","baseURL","createAsyncThunk","_","rejectWithValue","contactsAPI","contacts","message","result","getContacts","state","getIsLoading","isLoading","getFilter","filter","getFilteredContacts","createSelector","name","toLowerCase","includes","getIsAdded","map","Container","children","className","s","container","ContactsForm","useState","setName","phone","setPhone","isAdded","useSelector","dispatch","useDispatch","form","onSubmit","e","preventDefault","alert","handleSubmit","id","htmlFor","input","type","value","onChange","target","btn","disabled","ContactsList","filterContacts","list","onClick","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","Filter","label","App","useEffect","title","color","height","width","length","createReducer","payload","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eee7cfc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Vfyb\",\"label\":\"ContactForm_label__3963f\",\"input\":\"ContactForm_input__2gvLS\",\"btn\":\"ContactForm_btn__enPAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-jru\",\"item\":\"ContactList_item__WVKFf\",\"btn\":\"ContactList_btn__2a-BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__M06Fu\",\"input\":\"Filter_input__1uZa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3MaGo\"};","import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'https://61c83f0fadee460017260c3d.mockapi.io';\r\n\r\nexport async function fetchContacts() {\r\n  const { data } = await axios.get(`/contacts`);\r\n  return data;\r\n}\r\n\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post('/contacts', contact);\r\n  return data;\r\n}\r\n\r\nexport async function deleteContact(contactId) {\r\n  const { data } = await axios.delete(`/contacts/${contactId}`);\r\n  return data;\r\n}","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport * as contactsAPI from 'services/contactsAPI';\r\n\r\n\r\nexport const fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const contacts = await contactsAPI.fetchContacts();\r\n      return contacts;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async (contact, { rejectWithValue }) => {\r\n    try {\r\n      const result = await contactsAPI.addContact(contact);\r\n      return result;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nexport const deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (contactId, { rejectWithValue }) => {\r\n    try {\r\n      await contactsAPI.deleteContact(contactId);\r\n      return contactId;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts;\r\n\r\nexport const getIsLoading = state => state.isLoading;\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport const getIsAdded = createSelector([getContacts], contacts => {\r\n  const isAdded = name => contacts.map(contact => contact.name).includes(name);\r\n  return isAdded;\r\n});","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getIsAdded } from '../../redux/contacts/contacts-selectors';\r\n\r\nexport default function ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const isAdded = useSelector(getIsAdded);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (isAdded(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact(name, phone));\r\n    }\r\n\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={e => handleSubmit(e)}>\r\n        <label id=\"name\" htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n         className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <label id=\"phone\" htmlFor=\"phone\">\r\n          Phone\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={e => setPhone(e.target.value)}\r\n        />\r\n        <button  className={s.btn} type=\"submit\" disabled={!(name && phone)}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContacts: propTypes.func,\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContact } from '../../redux/contacts/contacts-operations';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport propTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const filterContacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {filterContacts.map(({ id, name, phone }) => (\r\n          <li key={id}>\r\n            <p className={s.list}>\r\n              {name}: <span>{phone}</span>\r\n            </p>\r\n            <button className={s.btn}type=\"button\" onClick={() => dispatch(deleteContact(id))}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  onDeleteBtn: propTypes.func,\r\n  contacts: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.string,\r\n      name: propTypes.string,\r\n      phone: propTypes.string,\r\n    }),\r\n  ),\r\n};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label} name=\"filter\" htmlFor=\"filter\" value={filter}>\r\n        Find contacts by name\r\n      </label>\r\n      <input className={s.input}\r\n        value={filter}\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts } from './redux/contacts/contacts-operations';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { getContacts, getIsLoading } from './redux/contacts/contacts-selectors';\r\nimport Loader from 'react-loader-spinner';\r\nimport Section from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\n\r\nexport default function App() {\r\n  const contacts = useSelector(getContacts);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      {isLoading ? (\r\n        <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\r\n      ) : null}\r\n\r\n      {contacts.length ? (\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <ContactList />\r\n        </Section>\r\n      ) : null}\r\n      </div> \r\n  )\r\n}\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contacts-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  isLoading,\r\n});","import { configureStore} from '@reduxjs/toolkit';\r\nimport rootReducer from './contacts/contacts-reducer';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}