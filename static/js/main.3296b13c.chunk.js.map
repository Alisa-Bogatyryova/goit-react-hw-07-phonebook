{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js"],"names":["module","exports","changeFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","axios","defaults","baseURL","getContacts","state","contacts","getIsLoading","isLoading","getFilter","filter","getFilteredContacts","createSelector","contact","name","toLowerCase","includes","getIsAdded","map","Container","children","className","s","container","ContactsForm","useState","setName","phone","setPhone","isAdded","useSelector","dispatch","useDispatch","handleSubmit","e","preventDefault","alert","post","then","data","catch","error","addContact","form","onSubmit","id","htmlFor","input","type","value","onChange","target","btn","disabled","ContactsList","filterContacts","list","onClick","delete","deleteContacts","Filter","label","App","useEffect","get","title","color","height","width","length","createReducer","_","payload","combineReducers","store","configureStore","reducer","rootReducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3296b13c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3Vfyb\",\"label\":\"ContactForm_label__3963f\",\"input\":\"ContactForm_input__2gvLS\",\"btn\":\"ContactForm_btn__enPAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1-jru\",\"item\":\"ContactList_item__WVKFf\",\"btn\":\"ContactList_btn__2a-BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__M06Fu\",\"input\":\"Filter_input__1uZa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__3MaGo\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  'contacts/fetchContactsRequest',\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  'contacts/fetchContactsSuccess',\r\n);\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\r\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\r\nexport const addContactsError = createAction('contacts/addContactsError');\r\n\r\nexport const deleteContactsRequest = createAction(\r\n  'contacts/deleteContactsRequest',\r\n);\r\nexport const deleteContactsSuccess = createAction(\r\n  'contacts/deleteContactsSuccess',\r\n);\r\nexport const deleteContactsError = createAction('contacts/deleteContactsError');","import axios from 'axios';\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from './contacts-actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchContacts = () => dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n  axios\r\n    .get('/contacts')\r\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n    .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nexport const addContact = (name, phone) => dispatch => {\r\n  const contact = { name, phone };\r\n\r\n  dispatch(addContactsRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch(error => dispatch(addContactsError(error)));\r\n};\r\n\r\nexport const deleteContacts = id => dispatch => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactsSuccess(id)))\r\n    .catch(error => dispatch(deleteContactsError(error)));\r\n};","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contacts;\r\n\r\nexport const getIsLoading = state => state.isLoading;\r\n\r\nexport const getFilter = state => state.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) =>\r\n    contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    ),\r\n);\r\n\r\nexport const getIsAdded = createSelector([getContacts], contacts => {\r\n  const isAdded = name => contacts.map(contact => contact.name).includes(name);\r\n  return isAdded;\r\n});","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport propTypes from 'prop-types';\r\nimport s from './ContactForm.module.css';\r\nimport { addContact } from '../../redux/contacts/contacts-operations';\r\nimport { getIsAdded } from '../../redux/contacts/contacts-selectors';\r\n\r\nexport default function ContactsForm() {\r\n  const [name, setName] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const isAdded = useSelector(getIsAdded);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (isAdded(name)) {\r\n      return alert(`${name} is already in contacts`);\r\n    } else {\r\n      dispatch(addContact(name, phone));\r\n    }\r\n\r\n    setName('');\r\n    setPhone('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className={s.form} onSubmit={e => handleSubmit(e)}>\r\n        <label id=\"name\" htmlFor=\"name\">\r\n          Name\r\n        </label>\r\n        <input\r\n         className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id=\"name\"\r\n          value={name}\r\n          onChange={e => setName(e.target.value)}\r\n        />\r\n        <label id=\"phone\" htmlFor=\"phone\">\r\n          Phone\r\n        </label>\r\n        <input\r\n          className={s.input}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          id=\"phone\"\r\n          value={phone}\r\n          onChange={e => setPhone(e.target.value)}\r\n        />\r\n        <button  className={s.btn} type=\"submit\" disabled={!(name && phone)}>\r\n          add contact\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsForm.propTypes = {\r\n  onAddContacts: propTypes.func,\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { deleteContacts } from '../../redux/contacts/contacts-operations';\r\nimport { getFilteredContacts } from '../../redux/contacts/contacts-selectors';\r\nimport propTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nexport default function ContactsList() {\r\n  const filterContacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <ul>\r\n        {filterContacts.map(({ id, name, phone }) => (\r\n          <li key={id}>\r\n            <p className={s.list}>\r\n              {name}: <span>{phone}</span>\r\n            </p>\r\n            <button className={s.btn}type=\"button\" onClick={() => dispatch(deleteContacts(id))}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nContactsList.propTypes = {\r\n  onDeleteBtn: propTypes.func,\r\n  contacts: propTypes.arrayOf(\r\n    propTypes.exact({\r\n      id: propTypes.string,\r\n      name: propTypes.string,\r\n      phone: propTypes.string,\r\n    }),\r\n  ),\r\n};","import { useSelector, useDispatch } from 'react-redux';\r\nimport { changeFilter } from '../../redux/contacts/contacts-actions';\r\nimport { getFilter } from '../../redux/contacts/contacts-selectors';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <>\r\n      <label className={s.label} name=\"filter\" htmlFor=\"filter\" value={filter}>\r\n        Find contacts by name\r\n      </label>\r\n      <input className={s.input}\r\n        value={filter}\r\n        type=\"text\"\r\n        id=\"filter\"\r\n        onChange={e => dispatch(changeFilter(e.target.value))}\r\n      />\r\n    </>\r\n  );\r\n}","import { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchContacts } from './redux/contacts/contacts-operations';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport { getContacts, getIsLoading } from './redux/contacts/contacts-selectors';\r\nimport Loader from 'react-loader-spinner';\r\nimport Section from './components/Container/Container';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\n\r\n\r\nexport default function App() {\r\n  const contacts = useSelector(getContacts);\r\n  const isLoading = useSelector(getIsLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Section title=\"Phonebook\">\r\n        <ContactForm />\r\n      </Section>\r\n\r\n      {isLoading ? (\r\n        <Loader type=\"Rings\" color=\"#00BFFF\" height={80} width={80} />\r\n      ) : null}\r\n\r\n      {contacts.length ? (\r\n        <Section title=\"Contacts\">\r\n          <Filter />\r\n          <ContactList />\r\n        </Section>\r\n      ) : null}\r\n      </div> \r\n  )\r\n}\r\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  changeFilter,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n} from './contacts-actions';\r\n\r\nconst contacts = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactsSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isLoading = createReducer(false, {\r\n  [addContactsRequest]: () => true,\r\n  [addContactsSuccess]: () => false,\r\n  [addContactsError]: () => false,\r\n\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [deleteContactsRequest]: () => true,\r\n  [deleteContactsSuccess]: () => false,\r\n  [deleteContactsError]: () => false,\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts,\r\n  filter,\r\n  isLoading,\r\n});","import { configureStore} from '@reduxjs/toolkit';\r\nimport rootReducer from './contacts/contacts-reducer';\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport store from './redux/store'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}